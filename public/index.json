
[{"content":"Project Duration: VCU Fall 2023 - Spring 2024\nWebsite: LittleRamPantries.com Source code: Github.com\nFighting Food Insecurity with Technology # In the Fall of 2023, I embarked on a mission to combat food insecurity at Virginia Commonwealth University (VCU) by developing the Little Ram Pantries Web Dashboard. This project aimed to provide consistent food access to busy students through a serverless web application that interacts with Raspberry PIs and webcams installed in newspaper stand boxes stocked with food and placed inside busy buildings on campus.\nOvercoming Challenges with Innovation # One of the major challenges we faced was limited funding. Initially, we developed a Node.js application hosted on a traditional server. However, the cost of maintaining this infrastructure proved to be unsustainable. To overcome this, we pivoted to a more robust, scalable, and cost-effective serverless architecture using AWS Lambda functions written in Go. This decision significantly reduced our costs while maintaining high performance and scalability.\nTechnical Implementation # The core of our solution involved integrating React for the frontend with AWS Lambdas and Go for the backend. The Raspberry PIs, equipped with webcams, were placed inside newspaper stand boxes to monitor and stock the food supplies. These devices communicated with our serverless backend, updating the web dashboard in real-time. This system allowed us to efficiently manage food supplies and ensure they were always available to students in need.\nRecognitions and Awards # Our innovative approach and positive social impact did not go unnoticed. The Little Ram Pantries Web Dashboard was selected as one of the four recipients of the Sternheimer grant, a prestigious award given to senior capstone projects that demonstrate exceptional innovation and social impact. The application process was rigorous, requiring a detailed written proposal and an in-person presentation to a board of distinguished engineers from the community.\nFurthermore, our project received a third-place award for multidisciplinary engineering projects at the final senior capstone ceremony. This recognition validated the hard work and dedication we poured into this project and highlighted the significant impact technology can have on addressing social issues.\nFuture Prospects # Moving forward, we plan to continue enhancing the Little Ram Pantries Web Dashboard. We aim to incorporate more advanced features, such as fine tuning the AI algorithm that analysis new images to anticipate food shortages and integration with campus services to streamline food restocking processes. Our goal is to ensure that no student at VCU goes hungry and to inspire similar initiatives at other universities.\nConclusion # The Little Ram Pantries Web Dashboard project has been a transformative experience, both personally and professionally. It has taught me the value of resilience and adaptability in the face of financial constraints and has reinforced my belief in the power of technology to drive social change. I am incredibly proud of what we have achieved and look forward to seeing the continued positive impact of this project on our campus community.\n","date":"10 May 2024","externalUrl":null,"permalink":"/projects/littlerampantries/","section":"Projects","summary":"An award winning open source project that connects students to free food through newspaper stands on campus.","title":"Little Ram Pantries","type":"projects"},{"content":"","date":"10 July 2024","externalUrl":null,"permalink":"/tags/example/","section":"Tags","summary":"","title":"Example","type":"tags"},{"content":"","date":"10 July 2024","externalUrl":null,"permalink":"/","section":"Joshua Hayes","summary":"","title":"Joshua Hayes","type":"page"},{"content":" View the Project\u0026rsquo;s code here # I created this project to stake my claim in the digital space. I\u0026rsquo;ve always admired engineers who were skilled enough to develop their own website, and I enjoyed seeing how each one showcased it\u0026rsquo;s creators personality. I created this site using Hugo, a fast and flexible static site generator. Hugo allowed me to build the website quickly and focus on the content and how it was displayed.\nThe Journey Begins # When I started this project, I had a vision of what I wanted my site to look like. I spent hours researching different static site generators and settled on Hugo because of its speed, simplicity, and robust features. The fact that Hugo uses Markdown for content creation was a huge plus for me, as it allowed me to focus on writing without getting bogged down in HTML. I compared it to other static site generators, but ultimately choose Hugo because I wanted to utilize a project that was built with Go.\nSetting Up with Hugo # The initial setup was straightforward. I installed Hugo on my machine and quickly had a basic site up and running. The Hugo documentation and community are incredibly helpful, and I found answers to my questions with ease. Choosing a theme was the next step, and it was an enjoyable process exploring the variety of options available. I eventually chose Blowfish a theme that was clean, responsive, and customizable.\nCustomization and Personalization # One of the best parts of using Hugo is the ability to customize the site to my liking. I delved into the configuration files and learned how to tweak various settings to make the site truly mine. From modifying the layout to adding custom CSS, each change made the site feel more personal. I appreciated Blowfish including built in features that enhanced functionality, such as adding a search feature, social media links, and a comments section.\nLearning and Growth # Throughout this process, I\u0026rsquo;ve learned a great deal about web development. Working with Hugo has taught me more about static site generators, HTML, CSS, and even a bit of JavaScript. Having previously worked with SPA applications in frameworks like React and Angular It\u0026rsquo;s been a rewarding experience that has not only resulted in a website I\u0026rsquo;m proud of but also expanded my technical skill set.\nFuture Plans # This site is just the beginning. I plan to continue updating it with new content and features. I want to maintain the blog section where I can share my thoughts on technology, development, and other topics I\u0026rsquo;m passionate about.\nConclusion # Creating this website has been a fulfilling endeavor. It stands as a testament to my growth as a developer and my commitment to carving out my own space on the internet. I\u0026rsquo;m excited to see how it evolves over time and look forward to the opportunities it will bring. If you\u0026rsquo;re considering creating your own site, I highly recommend giving Hugo a try. It\u0026rsquo;s a powerful tool that can help you bring your digital vision to life.\n","date":"10 July 2024","externalUrl":null,"permalink":"/projects/portfoliosummary/","section":"Projects","summary":"Why I choose Hugo and Go to build this website and why it was a perfect choice to do so.","title":"Personal Portfolio","type":"projects"},{"content":"","date":"10 July 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"","date":"10 July 2024","externalUrl":null,"permalink":"/tags/tag/","section":"Tags","summary":"","title":"Tag","type":"tags"},{"content":"","date":"10 July 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"1 July 2024","externalUrl":null,"permalink":"/tags/resume/","section":"Tags","summary":"","title":"Resume","type":"tags"},{"content":" GitHub | LinkedIn # Professional Experience # Markel Group # Associate Software Engineer\nJune 2024 - Present\nWrote the mapping logic of a C# microservice that simplified the JSON schema of 4.4 million historical policies into a 200-field simplified schema for business use. Implemented a new business line into a legacy codebase, involving Angular UI, C# backend, and new business logic in the shared rules library, followed by an API for partner workflows. Part-Time Associate Software Engineer\nAugust 2023 - June 2024\nWorked 22.5 hours a week on an Agile Scrum team, employing .NET, Angular, and C# to develop user stories and bug fixes for an external facing web app in response to dynamic business needs. Guided an offshore development team in the creation of automated tests using Functionize. This tool uses ML to reduce time spent on unit test maintenance, allowing for 100% test coverage of our web app and ensuring the upgrade from Angular 11 to 15 was frictionless. Internship\nSummer 2023\nLed a team of six interns to create an internal permission auditing web app for Azure DevOps. Developed using Java, Spring, Gradle, and the Azure DevOps API. The tool automated a manual process and consolidated over 1 million unique user permissions into a centralized location, proving an efficient solution for management. Developed a new user feature in an agile scrum team using C# and .NET, solving a bug that affected insurance policies based in Kentucky, improving user satisfaction. Skills # Languages: C#, Angular, React, Go, SQL Tools: Git, GitHub, AzureDevOps, Jira Software Development Projects # Little Ram Pantries Web Dashboard # Fall 2023 - Spring 2024\nLittle Ram Pantries | Source code\nFighting food insecurity through a serverless web dashboard utilizing React and AWS lambdas written in Go that interacts with RaspberryPIs and webcams installed in newspaper stand boxes stocked with food and placed inside busy buildings on campus. These provide consistent food access to busy students, feeding over 14,000 in 2023. Selected as 1 of 4 recipients of a Sternheimer grant, a prestigious award given to senior capstones that demonstrate innovation and positive social impact. The application process involved a written proposal as well as an in-person presentation to a board of distinguished engineers from the community. Received a 3rd place award for multidisciplinary engineering projects at the final senior capstone ceremony. Two Truths and a Lie # Fall 2022\nWrote a terminal game in Python that uses the PRAW external library to scrape articles from the Reddit subreddits r/notTheOnion and r/theOnion and presents the player with three articles. Users gain a point for each article they correctly identify as a real news article. Education # Virginia Commonwealth University\nBachelor of Science in Computer Science, June 2024\n","date":"1 July 2024","externalUrl":null,"permalink":"/resume/","section":"Joshua Hayes","summary":"GitHub | LinkedIn # Professional Experience # Markel Group # Associate Software Engineer","title":"Resume","type":"page"},{"content":" My Searching for understanding culture # \u0026ldquo;Culture\u0026rdquo; in the tech space has an underhanded, and usually negative, connotation. Engineers talk of the cut throat culture of Amazon or the isolating culture of IBM. The secretive culture of Apple and the relaxed, shorts-wearing, culture of startups. In my search to better understand the software engineering industry, I came across a collection of memos posted on a blog by Sriram Krishnan. It inspired me, and I spent the rest of the day peeking behind the curtain and putting my eyes where they weren\u0026rsquo;t intended to be. It was eyeopening. I hope this analysis of two memos from the collection inspire you to read the rest.\nInternal memos are a form of communication within organizations that reveal the unfiltered culture and operational dynamics of tech companies. Unlike public statements, these documents are not intended for external consumption. There are not teams of people reviewing the contents before their release. Internal memos offer a candid look at a company\u0026rsquo;s internal operations. This essay examines the way internal memos both mirror and impact the culture within tech companies, with a focus on two examples: a 1989 Microsoft memo about \u0026ldquo;zero deficit code\u0026rdquo; and a series of text messages between Mark Zuckerberg and Kevin Systrom during Facebook\u0026rsquo;s acquisition of Instagram. These documents underscore the distinct, rapid, and innovation-focused environments of tech companies, and illustrate how these cultures both shape and are influenced by internal communications.\nWhat is an internal memo? # Internal memos are documents that circulate within a company to communicate policies, strategies, and other important information among employees. They are often difficult to come by since they are intended for internal use only and are not subject to the scrutiny and polish of public relations teams. As a result, these memos can reveal the true culture of a company, unfiltered by external expectations and PR strategies. Internal memos are released to the public through various channels, often depending on the circumstances and the individuals involved. Whistleblowers or concerned employees might leak memos to the media to expose unethical practices. Legal processes, such as public records requests or court cases, can also bring these documents to light, and make them part of the public record. Sometimes, companies themselves may release memos to clarify their stance or to improve public perception during crises. Former employees might share memos in their writings or interviews to provide context for their experiences. Accidental releases often occur when documents are mishandled or incorrectly shared.\nZero Deficit Code # Follow this link to view the memo. # June 20, 1989, Chris Mason, a software engineer at Microsoft, wrote a memo titled “Zero Deficit Code.” Mason outlines the need for, difficulties in achieving, and techniques for writing bug-free software. Despite its age, many of the ideas presented in the memo are still relevant in the industry today. The memo emphasizes thinking of the bigger picture, having good documentation, and facilitating effective communication—all of which are still key goals in software development. This memo was groundbreaking, and was quickly shared among managers and development leads inside Microsoft.\nThe \u0026ldquo;Zero Defects\u0026rsquo;\u0026rsquo; memo is particularly interesting because it highlights the ambitious nature of Microsoft\u0026rsquo;s culture at the time. The goal of zero defects in software is massive, reflecting a culture that values perfection and high standards. It was the accepted standard that code would come with bugs, and that it was the job of the QA team to find them. Mason challenges this. Arguing and emphasizing throughout the memo, “what we should be rewarding are people who do the job right the first time,“ (Mason). Mason is suggesting a culture switch. Using the internal memo as a bully pulpit, he speaks for Microsoft and declares they no longer stand for pushing buggy code to be done with it. Microsoft engineers should want to produce working software. Thirty years later, the principles outlined in the \u0026ldquo;Zero Defects\u0026rsquo;\u0026rsquo; memo continue to resonate within the tech industry. Despite advances in developer tools and methodologies, the aspiration for defect-free software remains a challenge. Mason’s call for a culture that values doing the job right the first time still echoes today, as companies strive for higher quality standards in increasingly complex software projects. While modern developer tools and frameworks have simplified many aspects of software development, the scale and complexity of applications have grown exponentially. This duality means that while individual tasks might be easier, the overall systems are much larger and more intricate, making Mason\u0026rsquo;s emphasis on quality and thoroughness as relevant as ever.\nText Messages Between Zuckerberg and Systrom # Follow this link to view these text. # The second set of documents analyzed are the text message logs between Mark Zuckerberg, the founder of Facebook, and Kevin Systrom, the founder of Instagram, during Facebook\u0026rsquo;s acquisition of Instagram. These texts have a very casual tone, despite the high-stakes nature of the billion-dollar deal being negotiated. The conversations are informal, showing the founders had frequent meetings at each other\u0026rsquo;s houses and had relaxed dialogue that clouds the seriousness of the discussions. Despite this air of casualty, there is a more serious tone beneath the surface. It is obvious that each founder meticulously analyzes their messages before hitting send.\nThese text messages between Zuckerberg and Systrom during Facebook\u0026rsquo;s provide an unfiltered glimpse into the fast-paced and innovation-driven culture of tech companies. Unlike formal negotiations typically conducted in boardrooms, these messages reveal a casual yet intense dialogue, with meetings arranged at homes and discussions carried out in a straightforward manner. Both individuals walk a fine line. Despite the air of casualty, Zuckerberg is only thinking of the longevity of his company. While still appearing respectful and friendly on the surface, Zuckerberg is trying to get the best deal he can without scaring away Systrom. Zuckerberg\u0026rsquo;s strategic vision for integrating Instagram into Facebook\u0026rsquo;s ecosystem while maintaining its independence is laid out clearly, and Systrom\u0026rsquo;s responses reflect his concerns about preserving Instagram\u0026rsquo;s unique identity and user experience. This direct and open communication shows the speed and responsiveness that are necessary in the tech industry, where decisions can pivot quickly based on evolving discussions and immediate feedback. The candid nature of these texts also highlights the mutual respect and collaborative spirit that drive tech company cultures. Systrom’s thoughtful reflections on the potential integration and Zuckerberg’s emphasis on leveraging Facebook\u0026rsquo;s infrastructure to enhance Instagram demonstrate a shared commitment to innovation and user-centric development. Despite the looming billion-dollar stakes, the dialogue between the two founders remains focused on strategic alignment and long-term vision rather than just financials. This approach not only facilitates effective decision-making but also fosters a culture where leaders are deeply engaged in the core mission of their companies.\nComparing and Contrasting # Both the Microsoft memo and the Facebook-Instagram texts serve as strategic documents, albeit in different ways. The Microsoft memo is highly focused on achieving a specific technical goal, advocating for a culture shift towards producing bug-free software and emphasizing the importance of quality and thoroughness. This document reflects Microsoft\u0026rsquo;s ambition to elevate their technical standards and cultivate a disciplined engineering culture, where perfection and precision are the standard. On the other hand, the Facebook-Instagram texts, while broader in their strategic implications, showcase a more informal and relationship-driven approach to negotiation and decision-making. The casual tone of the exchanges between Zuckerberg and Systrom muddies the high stakes involved, highlighting a culture that values open communication, speed, and mutual respect. Despite these differences, both documents exemplify a top-down communication approach where leadership not only sets the vision and standards but also engages directly with key stakeholders to drive strategic initiatives.\nClosing Arguments # Internal memos provide valuable insights into the cultural identities of tech companies, revealing a softer, less refined version of the company than the public typically sees. The Microsoft memo on \u0026ldquo;Zero Defects\u0026rdquo; illustrates a culture of high standards and precision, while the Facebook-Instagram text messages show a more informal, relationship-driven approach to business. These documents demonstrate how internal communications can both reflect and influence the unique cultures of tech companies, shaping the way they operate and evolve over time. By examining these internal communications, one can gain a deeper understanding of the intrinsic values and operational philosophies that drive these organizing, providing a window into their inner workings and culture.\n","date":"21 June 2024","externalUrl":null,"permalink":"/posts/cultureanalysis/","section":"Posts","summary":"An analysis of the culture of tech companies through an exploration of now exposed internal memos.","title":"An Analysis Of Culture Through Internal Memos","type":"posts"},{"content":"","date":"21 June 2024","externalUrl":null,"permalink":"/tags/posts/","section":"Tags","summary":"","title":"Posts","type":"tags"},{"content":"","date":"21 June 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" What is the STAR method? # The STAR method is a structured way of responding to behavioral interview questions by discussing the specific Situation, Task, Action, and Result of the situation you are describing.\nThis is why it\u0026rsquo;s important # The STAR method is important because it helps you provide clear and concise answers to interview questions. It ensures that you cover all necessary aspects of your experience, demonstrating your skills and abilities in a structured manner. This approach makes it easier for interviewers to understand the context of your achievements and assess your qualifications.\nHere are some STAR responses to common interview questions # 1. Can you describe a challenging technical problem you have solved? # Situation: During my tenure at Markel Group, I was tasked with simplifying the JSON schema of over 10 years of historic transaction data stored in our noSQL database. This was over 4.4 million historical policies that the business wanted to translate into a relational schema that could be used to run business reports on. Before this microservice, the current process involved an over 3 month wait to see the policy data at the end of the pipeline.\nTask: The primary challenge was to flatten this extensive JSON schema, originally containing 2,000 fields, into a more manageable format without losing crucial information.\nAction: I wrote the mapping logic for a C# microservice designed to convert the JSON schema into a simplified 200-field schema. This involved understanding the existing complex structure, identifying essential fields, and creating efficient mapping rules. I followed a waterfall based development approach. Using an excel sheet to highlight the needed fields, and my knowledge of the applications JSON schema from past projects. I wrote the logic to both map the JSON schema from non-simplified to simplified, as well as the unit test to verify this logic was correct.\nResult: The new simplified schema greatly improved data accessibility and usability for business analytics and operations, facilitating better decision-making processes. The streamlined data also enhanced system performance and reduced processing times.\n2. Can you explain a project you have worked on, including your specific contributions and the technologies used? # Situation: As part of my senior capstone project at Virginia Commonwealth University, I worked on the Little Ram Pantries Web Dashboard, an initiative to combat food insecurity on campus.\nTask: The project aimed to create a web dashboard that would interact with Raspberry Pis and webcams installed in newspaper stand boxes stocked with food, placed in busy campus buildings. The dashboard needed to monitor and manage food inventory to ensure consistent access for students.\nAction: I developed the web dashboard using React and AWS Lambda functions written in Go. We transitioned to a serverless architecture after receiving feedback from a grant we received. I was responsible for creating this architecture, integrating the Raspberry Pis and webcams with the dashboard, designing and creating the MVP React web dashboard, and writing the Go microservices that process new images. Additionally, I went beyond the requirements of the project and included AI analysis to the image uploading pipeline. This allows the researching using the data to have a better understanding of the pantry usage.\nResult: The web dashboard successfully provided continuous food access to over 14,000 students in 2023. The project was recognized for its innovation and social impact, earning a Sternheimer grant and a third-place award for multidisciplinary engineering projects. This solution not only addressed a critical need on campus but also showcased the potential of technology-driven social initiatives.\n3. How do you approach debugging and troubleshooting code? # Situation: As a part-time Associate Software Engineer at Markel Group, I worked on an external-facing web app that required frequent updates and bug fixes due to dynamic business needs.\nTask: One notable task involved guiding an offshore development team to ensure a smooth upgrade from Angular 11 to Angular 15, which required comprehensive test coverage.\nAction: With the guidance of the lead QA engineer, i helped introduce the team to Functionize, an automated testing tool that uses machine learning to streamline unit test maintenance. I collaborated with the offshore team to develop automated tests, achieving 100% test coverage. This proactive approach included detailed logging and monitoring to quickly identify and address issues.\nResult: The upgrade to Angular 15 was frictionless, with no major disruptions reported. The automated tests significantly reduced maintenance time, allowing the team to focus on new feature development and improving overall product stability. The testing tool proved to be successful and the QA team continues to create new test with it.\nWhen to not use STAR # While the STAR method is highly effective for answering behavioral interview questions, it is not suitable for all types of questions. Avoid using STAR for questions that require straightforward, factual answers, such as questions about your technical skills or knowledge. It is also not necessary for questions that seek your opinions, hypothetical scenarios, or discussions about your career aspirations. Use STAR specifically for questions that ask you to describe past experiences and how you handled specific situations.\n","date":"31 May 2024","externalUrl":null,"permalink":"/posts/starmethod/","section":"Posts","summary":"A summary of the Amazon STAR interview method as well as example applications using my own experiences.","title":"STAR Method","type":"posts"},{"content":"Hello! My name is Joshua and I\u0026rsquo;m a software engineer based in Richmond, VA. I currently work at Markel as a cloud-based full-stack engineer. I work with a variety of technologies daily, but mostly Angular and C#. My experience at Markel has given me the opportunity to build microservices, add new lines of business to legacy products, and solve interesting problems.\nWhen not working, you can find me rock climbing, making espresso, or spending time with my cats and partner. I also help maintain an open source project, Little Ram Pantries. You can read more about the project in it\u0026rsquo;s dedicated project post. While you\u0026rsquo;re there, feel free to check out some blog post and follow me on the social medias linked below!\n","externalUrl":null,"permalink":"/authors/author-bio/","section":"Authors","summary":"Hello! My name is Joshua and I\u0026rsquo;m a software engineer based in Richmond, VA.","title":"","type":"authors"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]